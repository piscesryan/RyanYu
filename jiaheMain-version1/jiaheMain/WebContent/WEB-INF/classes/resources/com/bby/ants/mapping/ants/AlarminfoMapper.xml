<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bby.ants.dao.AlarminfoMapper" >
  <resultMap id="BaseResultMap" type="com.bby.ants.entity.Alarminfo" >
    <id column="Id" property="id" jdbcType="BIGINT" />
    <result column="monitorPointsName" property="monitorpointsname" jdbcType="VARCHAR" />
    <result column="senderComp" property="sendercomp" jdbcType="VARCHAR" />
    <result column="temperature" property="temperature" jdbcType="INTEGER" />
    <result column="alarmTime" property="alarmtime" jdbcType="TIMESTAMP" />
    <result column="alarmtype" property="alarmtype" jdbcType="VARCHAR" />
    <result column="threshold" property="threshold" jdbcType="INTEGER" />
    <result column="result" property="result" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, monitorPointsName, senderComp, temperature, alarmTime, alarmtype, threshold, 
    result, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bby.ants.entity.AlarminfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from alarminfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from alarminfo
    where Id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from alarminfo
    where Id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bby.ants.entity.AlarminfoExample" >
    delete from alarminfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bby.ants.entity.Alarminfo" >
    insert into alarminfo (Id, monitorPointsName, senderComp, 
      temperature, alarmTime, alarmtype, 
      threshold, result, remark
      )
    values (#{id,jdbcType=BIGINT}, #{monitorpointsname,jdbcType=VARCHAR}, #{sendercomp,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=INTEGER}, #{alarmtime,jdbcType=TIMESTAMP}, #{alarmtype,jdbcType=VARCHAR}, 
      #{threshold,jdbcType=INTEGER}, #{result,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bby.ants.entity.Alarminfo" >
    insert into alarminfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="monitorpointsname != null" >
        monitorPointsName,
      </if>
      <if test="sendercomp != null" >
        senderComp,
      </if>
      <if test="temperature != null" >
        temperature,
      </if>
      <if test="alarmtime != null" >
        alarmTime,
      </if>
      <if test="alarmtype != null" >
        alarmtype,
      </if>
      <if test="threshold != null" >
        threshold,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="monitorpointsname != null" >
        #{monitorpointsname,jdbcType=VARCHAR},
      </if>
      <if test="sendercomp != null" >
        #{sendercomp,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null" >
        #{temperature,jdbcType=INTEGER},
      </if>
      <if test="alarmtime != null" >
        #{alarmtime,jdbcType=TIMESTAMP},
      </if>
      <if test="alarmtype != null" >
        #{alarmtype,jdbcType=VARCHAR},
      </if>
      <if test="threshold != null" >
        #{threshold,jdbcType=INTEGER},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bby.ants.entity.AlarminfoExample" resultType="java.lang.Integer" >
    select count(*) from alarminfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update alarminfo
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.monitorpointsname != null" >
        monitorPointsName = #{record.monitorpointsname,jdbcType=VARCHAR},
      </if>
      <if test="record.sendercomp != null" >
        senderComp = #{record.sendercomp,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature != null" >
        temperature = #{record.temperature,jdbcType=INTEGER},
      </if>
      <if test="record.alarmtime != null" >
        alarmTime = #{record.alarmtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.alarmtype != null" >
        alarmtype = #{record.alarmtype,jdbcType=VARCHAR},
      </if>
      <if test="record.threshold != null" >
        threshold = #{record.threshold,jdbcType=INTEGER},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update alarminfo
    set Id = #{record.id,jdbcType=BIGINT},
      monitorPointsName = #{record.monitorpointsname,jdbcType=VARCHAR},
      senderComp = #{record.sendercomp,jdbcType=VARCHAR},
      temperature = #{record.temperature,jdbcType=INTEGER},
      alarmTime = #{record.alarmtime,jdbcType=TIMESTAMP},
      alarmtype = #{record.alarmtype,jdbcType=VARCHAR},
      threshold = #{record.threshold,jdbcType=INTEGER},
      result = #{record.result,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bby.ants.entity.Alarminfo" >
    update alarminfo
    <set >
      <if test="monitorpointsname != null" >
        monitorPointsName = #{monitorpointsname,jdbcType=VARCHAR},
      </if>
      <if test="sendercomp != null" >
        senderComp = #{sendercomp,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null" >
        temperature = #{temperature,jdbcType=INTEGER},
      </if>
      <if test="alarmtime != null" >
        alarmTime = #{alarmtime,jdbcType=TIMESTAMP},
      </if>
      <if test="alarmtype != null" >
        alarmtype = #{alarmtype,jdbcType=VARCHAR},
      </if>
      <if test="threshold != null" >
        threshold = #{threshold,jdbcType=INTEGER},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bby.ants.entity.Alarminfo" >
    update alarminfo
    set monitorPointsName = #{monitorpointsname,jdbcType=VARCHAR},
      senderComp = #{sendercomp,jdbcType=VARCHAR},
      temperature = #{temperature,jdbcType=INTEGER},
      alarmTime = #{alarmtime,jdbcType=TIMESTAMP},
      alarmtype = #{alarmtype,jdbcType=VARCHAR},
      threshold = #{threshold,jdbcType=INTEGER},
      result = #{result,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=BIGINT}
  </update>
</mapper>